---
# Based on GNOME's configs but removed rules that are reported to conflict with
# prettier
# https://gitlab.gnome.org/GNOME/gnome-shell/-/blob/main/lint/eslintrc-gjs.yml
# https://gitlab.gnome.org/GNOME/gnome-shell/-/blob/main/lint/eslintrc-shell.yml
env:
    es2021: true
extends:
    - eslint:recommended
    - prettier
rules:
    array-callback-return: error
    block-scoped-var: error
    camelcase:
        - error
        - properties: never
          allow: [^vfunc_, ^on_, _instance_init]
    eqeqeq:
        - error
        - smart
    func-name-matching: error
    func-style:
        - error
        - declaration
        - allowArrowFunctions: true
    lines-between-class-members:
        - error
        - always
        - exceptAfterSingleLine: true
    max-nested-callbacks: error
    max-statements-per-line: error
    no-array-constructor: error
    no-await-in-loop: error
    no-caller: error
    no-constant-condition:
        - error
        - checkLoops: false
    no-div-regex: error
    no-empty:
        - error
        - allowEmptyCatch: true
    no-extra-bind: error
    no-implicit-coercion:
        - error
        - allow:
              - '!!'
    no-invalid-this: error
    no-iterator: error
    no-label-var: error
    no-lonely-if: error
    no-loop-func: error
    no-nested-ternary: error
    no-new-object: error
    no-new-wrappers: error
    no-octal-escape: error
    no-proto: error
    no-prototype-builtins: 'off'
    no-restricted-globals: [error, window]
    no-restricted-properties:
        - error
        - object: Lang
          property: copyProperties
          message: Use Object.assign()
        - object: Lang
          property: bind
          message: Use arrow notation or Function.prototype.bind()
        - object: Lang
          property: Class
          message: Use ES6 classes
    no-restricted-syntax:
        - error
        - selector: >-
              MethodDefinition[key.name="_init"] >
              FunctionExpression[params.length=1] >
              BlockStatement[body.length=1]
              CallExpression[arguments.length=1][callee.object.type="Super"][callee.property.name="_init"] >
              Identifier:first-child
          message: _init() that only calls super._init() is unnecessary
        - selector: >-
              MethodDefinition[key.name="_init"] >
              FunctionExpression[params.length=0] >
              BlockStatement[body.length=1]
              CallExpression[arguments.length=0][callee.object.type="Super"][callee.property.name="_init"]
          message: _init() that only calls super._init() is unnecessary
        - selector: BinaryExpression[operator="instanceof"][right.name="Array"]
          message: Use Array.isArray()
    no-return-assign: error
    no-return-await: error
    no-self-compare: error
    no-shadow: error
    no-shadow-restricted-names: error
    no-tabs: error
    no-template-curly-in-string: error
    no-throw-literal: error
    no-undef-init: error
    no-unneeded-ternary: error
    # no-unused-expressions: error
    no-unused-vars:
        - error
        # Vars use a suffix _ instead of a prefix because of file-scope private vars
        - varsIgnorePattern: (^unused|init|_$)
          argsIgnorePattern: ^(unused|_|extension)
    no-useless-call: error
    no-useless-computed-key: error
    no-useless-concat: error
    no-useless-constructor: error
    no-useless-rename: error
    no-useless-return: error
    no-with: error
    object-shorthand: error
    operator-assignment: error
    prefer-arrow-callback: error
    prefer-const: error
    prefer-destructuring:
        - error
        - object: true
          array: true
    prefer-numeric-literals: error
    prefer-promise-reject-errors: error
    prefer-rest-params: error
    prefer-spread: error
    prefer-template: error
    quotes:
        - error
        - single
        - avoidEscape: true
          allowTemplateLiterals: false
    require-await: error

    spaced-comment: error
    symbol-description: error
    yoda: error
globals:
    ARGV: readonly
    Debugger: readonly
    GIRepositoryGType: readonly
    global: readonly
    globalThis: readonly
    imports: readonly
    Intl: readonly
    log: readonly
    logError: readonly
    print: readonly
    printerr: readonly
    window: readonly
    TextEncoder: readonly
    TextDecoder: readonly
    console: readonly
    setTimeout: readonly
    setInterval: readonly
    clearTimeout: readonly
    clearInterval: readonly
parserOptions:
    ecmaVersion: 2022
    sourceType: module
